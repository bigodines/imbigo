<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Category on </title>
    <link>http://localhost:1313/categories/category/</link>
    <description>Recent content in Category on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Aug 2025 16:16:34 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/category/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My challenges with AI assisted coding</title>
      <link>http://localhost:1313/posts/ai-coding/</link>
      <pubDate>Fri, 15 Aug 2025 16:16:34 -0700</pubDate>
      <guid>http://localhost:1313/posts/ai-coding/</guid>
      <description>&lt;p&gt;I’m very bullish on AI code assistants. It’s actually the second biggest reason I stepped down from being a director and went back to IC life.&lt;/p&gt;&#xA;&lt;p&gt;I’ll write more about that decision another time, but today I want to share how I’m using AI day-to-day—and, maybe more importantly, when it doesn’t quite fit.&lt;/p&gt;&#xA;&lt;p&gt;My toolkit is pretty simple: VSCode, GitHub Copilot, Claude Sonnet, and occasionally KiloCode.&lt;/p&gt;&#xA;&lt;p&gt;The hardest part of working with AI so far has been the waiting. When I’m in “agentic” mode—fire off a big prompt and wait—it kills my flow. If I don’t get an answer in five seconds, my brain is already somewhere else, usually for twice as long as the model took to respond. Because of that, I’ve built my routine around minimizing that problem:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
